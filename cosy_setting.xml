<application>
  <component name="CosySettings">
    <option name="manualOpenLocalModel" value="true" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="true" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="true" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="quillpad|">
          <value>
            <list>
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="quillpad|1032412478227560">
          <value>
            <list>
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="enum class CloudService(override val nameResource: Int) : HasNameResource, EnumPreference by key(&quot;cloud_service&quot;) {&#10;    DISABLED(R.string.preferences_cloud_service_disabled) { override val isDefault = true },&#10;    NEXTCLOUD(R.string.preferences_cloud_service_nextcloud),&#10;    WEBDAV(R.string.preferences_cloud_service_webdavcloud),&#10;}" />
              <option value="生成文档注释" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/generate comment" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="Note.asNextcloudNote" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="我使用 sardine-android 的依赖，想要达成上述代码的作用，用来访问WEBDAV，帮我生成例子" />
              <option value="我需要是和 nextcloud.kt 完全一致的写法" />
              <option value="我只需要接口，不要实现" />
              <option value="/generate comment" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="quillpad|1738711289590196">
          <value>
            <list>
              <option value="Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.9.0, expected version is 1.7.1." />
              <option value="Error resolving plugin [id: 'org.jetbrains.kotlin.jvm', version: '1.7.10']&#10;&gt; The request for this plugin could not be satisfied because the plugin is already on the classpath with an unknown version, so compatibility cannot be checked." />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="帮我展开这个函数，不要使用语法糖" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="帮我新建一些按钮，ID从1开始增加，按钮显示的文字分别是//&#10;// Source code recreated from a .class file by IntelliJ IDEA&#10;// (powered by FernFlower decompiler)&#10;//&#10;&#10;package com.thegrizzlylabs.sardineandroid;&#10;&#10;import com.thegrizzlylabs.sardineandroid.report.SardineReport;&#10;import java.io.File;&#10;import java.io.IOException;&#10;import java.io.InputStream;&#10;import java.util.List;&#10;import java.util.Map;&#10;import java.util.Set;&#10;import javax.xml.namespace.QName;&#10;import org.w3c.dom.Element;&#10;&#10;public interface Sardine {&#10;    void setCredentials(String var1, String var2, boolean var3);&#10;&#10;    void setCredentials(String var1, String var2);&#10;&#10;    /** @deprecated */&#10;    @Deprecated&#10;    List&lt;DavResource&gt; getResources(String var1) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1, int var2) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1, int var2, Set&lt;QName&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1, int var2, boolean var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; propfind(String var1, int var2, Set&lt;QName&gt; var3) throws IOException;&#10;&#10;    &lt;T&gt; T report(String var1, int var2, SardineReport&lt;T&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; search(String var1, String var2, String var3) throws IOException;&#10;&#10;    /** @deprecated */&#10;    @Deprecated&#10;    void setCustomProps(String var1, Map&lt;String, String&gt; var2, List&lt;String&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; patch(String var1, Map&lt;QName, String&gt; var2) throws IOException;&#10;&#10;    List&lt;DavResource&gt; patch(String var1, Map&lt;QName, String&gt; var2, List&lt;QName&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; patch(String var1, List&lt;Element&gt; var2, List&lt;QName&gt; var3) throws IOException;&#10;&#10;    InputStream get(String var1) throws IOException;&#10;&#10;    InputStream get(String var1, Map&lt;String, String&gt; var2) throws IOException;&#10;&#10;    void put(String var1, byte[] var2) throws IOException;&#10;&#10;    void put(String var1, byte[] var2, String var3) throws IOException;&#10;&#10;    void put(String var1, File var2, String var3) throws IOException;&#10;&#10;    void put(String var1, File var2, String var3, boolean var4) throws IOException;&#10;&#10;    void put(String var1, File var2, String var3, boolean var4, String var5) throws IOException;&#10;&#10;    void delete(String var1) throws IOException;&#10;&#10;    void createDirectory(String var1) throws IOException;&#10;&#10;    void move(String var1, String var2) throws IOException;&#10;&#10;    void move(String var1, String var2, boolean var3) throws IOException;&#10;&#10;    void move(String var1, String var2, boolean var3, String var4) throws IOException;&#10;&#10;    void copy(String var1, String var2) throws IOException;&#10;&#10;    void copy(String var1, String var2, boolean var3) throws IOException;&#10;&#10;    boolean exists(String var1) throws IOException;&#10;&#10;    String lock(String var1) throws IOException;&#10;&#10;    String lock(String var1, int var2) throws IOException;&#10;&#10;    String refreshLock(String var1, String var2, String var3) throws IOException;&#10;&#10;    void unlock(String var1, String var2) throws IOException;&#10;&#10;    DavAcl getAcl(String var1) throws IOException;&#10;&#10;    DavQuota getQuota(String var1) throws IOException;&#10;&#10;    void setAcl(String var1, List&lt;DavAce&gt; var2) throws IOException;&#10;&#10;    List&lt;DavPrincipal&gt; getPrincipals(String var1) throws IOException;&#10;&#10;    List&lt;String&gt; getPrincipalCollectionSet(String var1) throws IOException;&#10;&#10;    void enableCompression();&#10;&#10;    void disableCompression();&#10;&#10;    void ignoreCookies();&#10;}" />
              <option value="/explain code" />
              <option value="帮我新建一些按钮，id从button1开始增加，按钮显示的文字分别是每个接口的名字//&#10;// Source code recreated from a .class file by IntelliJ IDEA&#10;// (powered by FernFlower decompiler)&#10;//&#10;&#10;package com.thegrizzlylabs.sardineandroid;&#10;&#10;import com.thegrizzlylabs.sardineandroid.report.SardineReport;&#10;import java.io.File;&#10;import java.io.IOException;&#10;import java.io.InputStream;&#10;import java.util.List;&#10;import java.util.Map;&#10;import java.util.Set;&#10;import javax.xml.namespace.QName;&#10;import org.w3c.dom.Element;&#10;&#10;public interface Sardine {&#10;    void setCredentials(String var1, String var2, boolean var3);&#10;&#10;    void setCredentials(String var1, String var2);&#10;&#10;    /** @deprecated */&#10;    @Deprecated&#10;    List&lt;DavResource&gt; getResources(String var1) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1, int var2) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1, int var2, Set&lt;QName&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; list(String var1, int var2, boolean var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; propfind(String var1, int var2, Set&lt;QName&gt; var3) throws IOException;&#10;&#10;    &lt;T&gt; T report(String var1, int var2, SardineReport&lt;T&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; search(String var1, String var2, String var3) throws IOException;&#10;&#10;    /** @deprecated */&#10;    @Deprecated&#10;    void setCustomProps(String var1, Map&lt;String, String&gt; var2, List&lt;String&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; patch(String var1, Map&lt;QName, String&gt; var2) throws IOException;&#10;&#10;    List&lt;DavResource&gt; patch(String var1, Map&lt;QName, String&gt; var2, List&lt;QName&gt; var3) throws IOException;&#10;&#10;    List&lt;DavResource&gt; patch(String var1, List&lt;Element&gt; var2, List&lt;QName&gt; var3) throws IOException;&#10;&#10;    InputStream get(String var1) throws IOException;&#10;&#10;    InputStream get(String var1, Map&lt;String, String&gt; var2) throws IOException;&#10;&#10;    void put(String var1, byte[] var2) throws IOException;&#10;&#10;    void put(String var1, byte[] var2, String var3) throws IOException;&#10;&#10;    void put(String var1, File var2, String var3) throws IOException;&#10;&#10;    void put(String var1, File var2, String var3, boolean var4) throws IOException;&#10;&#10;    void put(String var1, File var2, String var3, boolean var4, String var5) throws IOException;&#10;&#10;    void delete(String var1) throws IOException;&#10;&#10;    void createDirectory(String var1) throws IOException;&#10;&#10;    void move(String var1, String var2) throws IOException;&#10;&#10;    void move(String var1, String var2, boolean var3) throws IOException;&#10;&#10;    void move(String var1, String var2, boolean var3, String var4) throws IOException;&#10;&#10;    void copy(String var1, String var2) throws IOException;&#10;&#10;    void copy(String var1, String var2, boolean var3) throws IOException;&#10;&#10;    boolean exists(String var1) throws IOException;&#10;&#10;    String lock(String var1) throws IOException;&#10;&#10;    String lock(String var1, int var2) throws IOException;&#10;&#10;    String refreshLock(String var1, String var2, String var3) throws IOException;&#10;&#10;    void unlock(String var1, String var2) throws IOException;&#10;&#10;    DavAcl getAcl(String var1) throws IOException;&#10;&#10;    DavQuota getQuota(String var1) throws IOException;&#10;&#10;    void setAcl(String var1, List&lt;DavAce&gt; var2) throws IOException;&#10;&#10;    List&lt;DavPrincipal&gt; getPrincipals(String var1) throws IOException;&#10;&#10;    List&lt;String&gt; getPrincipalCollectionSet(String var1) throws IOException;&#10;&#10;    void enableCompression();&#10;&#10;    void disableCompression();&#10;&#10;    void ignoreCookies();&#10;}" />
              <option value="你帮我生成所有方法的按钮" />
              <option value="为什么没有5到28" />
              <option value="/explain code" />
              <option value="这布局改成可以上下滑动的" />
              <option value="/explain code" />
              <option value="这个布局设置成上下滑动的" />
              <option value="/explain code" />
              <option value="sardine-adnroid中的setCredentials" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showInlineAcceptTips" value="false" />
    <option name="showInlineCancelTips" value="false" />
    <option name="showInlineTriggerTips" value="false" />
  </component>
</application>