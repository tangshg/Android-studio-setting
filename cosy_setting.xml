<application>
  <component name="CosySettings">
    <option name="manualOpenLocalModel" value="true" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="true" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="true" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="quillpad|">
          <value>
            <list>
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="quillpad|1032412478227560">
          <value>
            <list>
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="enum class CloudService(override val nameResource: Int) : HasNameResource, EnumPreference by key(&quot;cloud_service&quot;) {&#10;    DISABLED(R.string.preferences_cloud_service_disabled) { override val isDefault = true },&#10;    NEXTCLOUD(R.string.preferences_cloud_service_nextcloud),&#10;    WEBDAV(R.string.preferences_cloud_service_webdavcloud),&#10;}" />
              <option value="生成文档注释" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/generate comment" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="Note.asNextcloudNote" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="我使用 sardine-android 的依赖，想要达成上述代码的作用，用来访问WEBDAV，帮我生成例子" />
              <option value="我需要是和 nextcloud.kt 完全一致的写法" />
              <option value="我只需要接口，不要实现" />
              <option value="/generate comment" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="quillpad|1738711289590196">
          <value>
            <list>
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/DuplicateBindings] org.qosp.notes.data.sync.core.SyncManager is bound multiple times:&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint," />
              <option value="@Provides&#10;    @Singleton&#10;    fun provideSyncManager(&#10;        @ApplicationContext context: Context,&#10;        preferenceRepository: PreferenceRepository,&#10;        idMappingRepository: IdMappingRepository,&#10;        nextcloudManager: NextcloudManager,&#10;        app: Application,&#10;    ) = SyncManager(&#10;        preferenceRepository,&#10;        idMappingRepository,&#10;        ConnectionManager(context),&#10;        nextcloudManager,&#10;        (app as App).syncingScope&#10;    )&#10;我这样写不报错，但是下面这种写法会报错&#10; @Provides&#10;    @Singleton&#10;    suspend fun provideSyncManager(&#10;        @ApplicationContext context: Context,&#10;        preferenceRepository: PreferenceRepository,&#10;        idMappingRepository: IdMappingRepository,&#10;        app: Application,&#10;    ): SyncManager {&#10;&#10;        val cloudService = preferenceRepository.getCloudService().first()&#10;&#10;         val cloudManager =   when (cloudService)&#10;            {&#10;&#10;            CloudService.NEXTCLOUD -&gt;TODO(&quot;Implement disabled sync manager logic&quot;)&#10;//                provideNextcloudManager(&#10;//                nextcloudAPI = NextcloudAPI(),&#10;//                noteRepository = noteRepository,&#10;//                notebookRepository = notebookRepository,&#10;//                idMappingRepository = idMappingRepository&#10;//            )&#10;            CloudService.WEBDAV -&gt;TODO(&quot;Implement disabled sync manager logic&quot;)&#10;//                provideWebdavManager(&#10;//                webdavAPI = WebdavAPIImpl(),&#10;//                noteRepository = noteRepository,&#10;//                notebookRepository = notebookRepository,&#10;//                idMappingRepository = idMappingRepository&#10;//            )&#10;            CloudService.DISABLED -&gt; TODO(&quot;Implement disabled sync manager logic&quot;)&#10;                else -&gt; TODO(&quot;Implement disabled sync manager logic&quot;)&#10;            }&#10;        return SyncManager(&#10;            preferenceRepository,&#10;            idMappingRepository,&#10;            ConnectionManager(context),&#10;            cloudManager,&#10;            (app as App).syncingScope&#10;        )&#10;    }" />
              <option value="@Provides&#10;    @Singleton&#10;    fun provideSyncManager(&#10;        @ApplicationContext context: Context,&#10;        preferenceRepository: PreferenceRepository,&#10;        idMappingRepository: IdMappingRepository,&#10;        nextcloudManager: NextcloudManager,&#10;        app: Application,&#10;    ) = SyncManager(&#10;        preferenceRepository,&#10;        idMappingRepository,&#10;        ConnectionManager(context),&#10;        nextcloudManager,&#10;        (app as App).syncingScope&#10;    )&#10;&#10;&#10;我这样写不报错，但是下面这种写法会报错&#10;&#10;&#10; @Provides&#10;    @Singleton&#10;    suspend fun provideSyncManager(&#10;        @ApplicationContext context: Context,&#10;        preferenceRepository: PreferenceRepository,&#10;        idMappingRepository: IdMappingRepository,&#10;        app: Application,&#10;    ): SyncManager {&#10;&#10;        val cloudService = preferenceRepository.getCloudService().first()&#10;&#10;         val cloudManager =   when (cloudService)&#10;            {&#10;&#10;            CloudService.NEXTCLOUD -&gt;TODO(&quot;Implement disabled sync manager logic&quot;)&#10;//                provideNextcloudManager(&#10;//                nextcloudAPI = NextcloudAPI(),&#10;//                noteRepository = noteRepository,&#10;//                notebookRepository = notebookRepository,&#10;//                idMappingRepository = idMappingRepository&#10;//            )&#10;            CloudService.WEBDAV -&gt;TODO(&quot;Implement disabled sync manager logic&quot;)&#10;//                provideWebdavManager(&#10;//                webdavAPI = WebdavAPIImpl(),&#10;//                noteRepository = noteRepository,&#10;//                notebookRepository = notebookRepository,&#10;//                idMappingRepository = idMappingRepository&#10;//            )&#10;            CloudService.DISABLED -&gt; TODO(&quot;Implement disabled sync manager logic&quot;)&#10;                else -&gt; TODO(&quot;Implement disabled sync manager logic&quot;)&#10;            }&#10;        return SyncManager(&#10;            preferenceRepository,&#10;            idMappingRepository,&#10;            ConnectionManager(context),&#10;            cloudManager,&#10;            (app as App).syncingScope&#10;        )&#10;    }&#10;&#10;下面是第二代码的报错信息&#10;D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/MissingBinding] org.qosp.notes.data.sync.core.SyncManager cannot be provided without an @Inject constructor or an @Provides-annotated method.&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint," />
              <option value="@Provides&#10;    @Singleton&#10;    fun provideWebdavManager(&#10;        webdavAPI: WebdavAPI,&#10;        noteRepository: NoteRepository,&#10;        notebookRepository: NotebookRepository,&#10;        idMappingRepository: IdMappingRepository,&#10;    ): SyncProvider {&#10;        return WebdavManager(webdavAPI, noteRepository, notebookRepository, idMappingRepository)&#10;    }&#10;我选择以这种方式提供NextcloudManager，你帮我优化我刚刚给你的第二段代码" />
              <option value="Interface NextcloudAPI does not have constructor" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\tmp\kapt3\stubs\defaultFlavorDebug\org\qosp\notes\di\UtilModule.java:51: : Cannot have more than one binding method with the same name in a single module&#10;    public final org.qosp.notes.data.sync.core.SyncManager provideSyncManager(@org.jetbrains.annotations.NotNull" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/DependencyCycle] Found a dependency cycle:&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.repo.NoteRepository is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavManager(, noteRepository, )&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.di.RepositoryModule.provideNoteRepository(, syncManager)&#10;      org.qosp.notes.data.repo.NoteRepository is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavManager(, noteRepository, )&#10;      ...&#10;  &#10;  The cycle is requested via:&#10;      org.qosp.notes.data.repo.NoteRepository is injected at&#10;          org.qosp.notes.di.UtilModule.provideBackupManager(noteRepository, )&#10;      org.qosp.notes.components.backup.BackupManager is injected at&#10;          org.qosp.notes.components.backup.BackupService.backupManager&#10;      org.qosp.notes.components.backup.BackupService is injected at&#10;          org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/MissingBinding] org.qosp.notes.data.sync.core.SyncProvider cannot be provided without an @Provides-annotated method.&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.components.workers.SyncWorker(, syncManager)&#10;      org.qosp.notes.components.workers.SyncWorker_AssistedFactory is injected at&#10;          org.qosp.notes.components.workers.SyncWorker_HiltModule.bind(factory)&#10;      java.util.Map&lt;java.lang.String,javax.inject.Provider&lt;androidx.hilt.work.WorkerAssistedFactory&lt;? extends androidx.work.ListenableWorker&gt;&gt;&gt; is injected at&#10;          androidx.hilt.work.WorkerFactoryModule.provideFactory(workerFactories)&#10;      androidx.hilt.work.HiltWorkerFactory is injected at&#10;          org.qosp.notes.App.workerFactory&#10;      org.qosp.notes.App is injected at&#10;          org.qosp.notes.App_GeneratedInjector.injectApp(org.qosp.notes.App)&#10;  The following other entry points also depend on it:&#10;      org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]&#10;      dagger.hilt.android.internal.lifecycle.HiltViewModelFactory.ViewModelFactoriesEntryPoint.getHiltViewModelMap() [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ViewModelC]&#10;      org.qosp.notes.ui.MainActivity_GeneratedInjector.injectMainActivity(org.qosp.notes.ui.MainActivity) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC]&#10;      org.qosp.notes.ui.about.AboutFragment_GeneratedInjector.injectAboutFragment(org.qosp.notes.ui.about.AboutFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.archive.ArchiveFragment_GeneratedInjector.injectArchiveFragment(org.qosp.notes.ui.archive.ArchiveFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.common.AbstractNotesFragment_GeneratedInjector.injectAbstractNotesFragment(org.qosp.notes.ui.common.AbstractNotesFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.editor.EditorFragment_GeneratedInjector.injectEditorFragment(org.qosp.notes.ui.editor.EditorFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.main.MainFragment_GeneratedInjector.injectMainFragment(org.qosp.notes.ui.main.MainFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.recorder.RecordAudioDialog_GeneratedInjector.injectRecordAudioDialog(org.qosp.notes.ui.recorder.RecordAudioDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog_GeneratedInjector.injectNextcloudAccountDialog(org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      and 1 other" />
              <option value="The integer literal does not conform to the expected type Boolean" />
              <option value="中文" />
              <option value="/explain code" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/MissingBinding] org.qosp.notes.data.sync.core.SyncProvider cannot be provided without an @Provides-annotated method.&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, nextcloudManager, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.components.workers.SyncWorker(, syncManager)&#10;      org.qosp.notes.components.workers.SyncWorker_AssistedFactory is injected at&#10;          org.qosp.notes.components.workers.SyncWorker_HiltModule.bind(factory)&#10;      java.util.Map&lt;java.lang.String,javax.inject.Provider&lt;androidx.hilt.work.WorkerAssistedFactory&lt;? extends androidx.work.ListenableWorker&gt;&gt;&gt; is injected at&#10;          androidx.hilt.work.WorkerFactoryModule.provideFactory(workerFactories)&#10;      androidx.hilt.work.HiltWorkerFactory is injected at&#10;          org.qosp.notes.App.workerFactory&#10;      org.qosp.notes.App is injected at&#10;          org.qosp.notes.App_GeneratedInjector.injectApp(org.qosp.notes.App)&#10;  The following other entry points also depend on it:&#10;      org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]&#10;      dagger.hilt.android.internal.lifecycle.HiltViewModelFactory.ViewModelFactoriesEntryPoint.getHiltViewModelMap() [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ViewModelC]&#10;      org.qosp.notes.ui.MainActivity_GeneratedInjector.injectMainActivity(org.qosp.notes.ui.MainActivity) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC]&#10;      org.qosp.notes.ui.about.AboutFragment_GeneratedInjector.injectAboutFragment(org.qosp.notes.ui.about.AboutFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.archive.ArchiveFragment_GeneratedInjector.injectArchiveFragment(org.qosp.notes.ui.archive.ArchiveFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.common.AbstractNotesFragment_GeneratedInjector.injectAbstractNotesFragment(org.qosp.notes.ui.common.AbstractNotesFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.editor.EditorFragment_GeneratedInjector.injectEditorFragment(org.qosp.notes.ui.editor.EditorFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.main.MainFragment_GeneratedInjector.injectMainFragment(org.qosp.notes.ui.main.MainFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.recorder.RecordAudioDialog_GeneratedInjector.injectRecordAudioDialog(org.qosp.notes.ui.recorder.RecordAudioDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog_GeneratedInjector.injectNextcloudAccountDialog(org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      and 1 other" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/DependencyCycle] Found a dependency cycle:&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncProvider(syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncProvider(syncProvider, )&#10;      ...&#10;  &#10;  The cycle is requested via:&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.components.workers.SyncWorker(, syncManager)&#10;      org.qosp.notes.components.workers.SyncWorker_AssistedFactory is injected at&#10;          org.qosp.notes.components.workers.SyncWorker_HiltModule.bind(factory)&#10;      java.util.Map&lt;java.lang.String,javax.inject.Provider&lt;androidx.hilt.work.WorkerAssistedFactory&lt;? extends androidx.work.ListenableWorker&gt;&gt;&gt; is injected at&#10;          androidx.hilt.work.WorkerFactoryModule.provideFactory(workerFactories)&#10;      androidx.hilt.work.HiltWorkerFactory is injected at&#10;          org.qosp.notes.App.workerFactory&#10;      org.qosp.notes.App is injected at&#10;          org.qosp.notes.App_GeneratedInjector.injectApp(org.qosp.notes.App)&#10;  The following other entry points also depend on it:&#10;      org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]&#10;      dagger.hilt.android.internal.lifecycle.HiltViewModelFactory.ViewModelFactoriesEntryPoint.getHiltViewModelMap() [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ViewModelC]&#10;      org.qosp.notes.ui.MainActivity_GeneratedInjector.injectMainActivity(org.qosp.notes.ui.MainActivity) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC]&#10;      org.qosp.notes.ui.about.AboutFragment_GeneratedInjector.injectAboutFragment(org.qosp.notes.ui.about.AboutFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.archive.ArchiveFragment_GeneratedInjector.injectArchiveFragment(org.qosp.notes.ui.archive.ArchiveFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.common.AbstractNotesFragment_GeneratedInjector.injectAbstractNotesFragment(org.qosp.notes.ui.common.AbstractNotesFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.editor.EditorFragment_GeneratedInjector.injectEditorFragment(org.qosp.notes.ui.editor.EditorFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.main.MainFragment_GeneratedInjector.injectMainFragment(org.qosp.notes.ui.main.MainFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.recorder.RecordAudioDialog_GeneratedInjector.injectRecordAudioDialog(org.qosp.notes.ui.recorder.RecordAudioDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog_GeneratedInjector.injectNextcloudAccountDialog(org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      and 1 other" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/MissingBinding] org.qosp.notes.data.sync.webdav.WebdavConfig cannot be provided without an @Inject constructor or an @Provides-annotated method.&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.sync.webdav.WebdavConfig is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavAPI(config)&#10;      org.qosp.notes.data.sync.webdav.WebdavAPI is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavManager(webdavAPI, )&#10;      org.qosp.notes.data.sync.webdav.WebdavManager is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncProvider(, webdavManager)&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.components.workers.SyncWorker(, syncManager)&#10;      org.qosp.notes.components.workers.SyncWorker_AssistedFactory is injected at&#10;          org.qosp.notes.components.workers.SyncWorker_HiltModule.bind(factory)&#10;      java.util.Map&lt;java.lang.String,javax.inject.Provider&lt;androidx.hilt.work.WorkerAssistedFactory&lt;? extends androidx.work.ListenableWorker&gt;&gt;&gt; is injected at&#10;          androidx.hilt.work.WorkerFactoryModule.provideFactory(workerFactories)&#10;      androidx.hilt.work.HiltWorkerFactory is injected at&#10;          org.qosp.notes.App.workerFactory&#10;      org.qosp.notes.App is injected at&#10;          org.qosp.notes.App_GeneratedInjector.injectApp(org.qosp.notes.App)&#10;  The following other entry points also depend on it:&#10;      org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]&#10;      dagger.hilt.android.internal.lifecycle.HiltViewModelFactory.ViewModelFactoriesEntryPoint.getHiltViewModelMap() [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ViewModelC]&#10;      org.qosp.notes.ui.MainActivity_GeneratedInjector.injectMainActivity(org.qosp.notes.ui.MainActivity) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC]&#10;      org.qosp.notes.ui.about.AboutFragment_GeneratedInjector.injectAboutFragment(org.qosp.notes.ui.about.AboutFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.archive.ArchiveFragment_GeneratedInjector.injectArchiveFragment(org.qosp.notes.ui.archive.ArchiveFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.common.AbstractNotesFragment_GeneratedInjector.injectAbstractNotesFragment(org.qosp.notes.ui.common.AbstractNotesFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.editor.EditorFragment_GeneratedInjector.injectEditorFragment(org.qosp.notes.ui.editor.EditorFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.main.MainFragment_GeneratedInjector.injectMainFragment(org.qosp.notes.ui.main.MainFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.recorder.RecordAudioDialog_GeneratedInjector.injectRecordAudioDialog(org.qosp.notes.ui.recorder.RecordAudioDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog_GeneratedInjector.injectNextcloudAccountDialog(org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      and 1 other" />
              <option value="/explain code" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/MissingBinding] org.qosp.notes.data.sync.core.SyncProvider cannot be provided without an @Provides-annotated method.&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.components.workers.SyncWorker(, syncManager)&#10;      org.qosp.notes.components.workers.SyncWorker_AssistedFactory is injected at&#10;          org.qosp.notes.components.workers.SyncWorker_HiltModule.bind(factory)&#10;      java.util.Map&lt;java.lang.String,javax.inject.Provider&lt;androidx.hilt.work.WorkerAssistedFactory&lt;? extends androidx.work.ListenableWorker&gt;&gt;&gt; is injected at&#10;          androidx.hilt.work.WorkerFactoryModule.provideFactory(workerFactories)&#10;      androidx.hilt.work.HiltWorkerFactory is injected at&#10;          org.qosp.notes.App.workerFactory&#10;      org.qosp.notes.App is injected at&#10;          org.qosp.notes.App_GeneratedInjector.injectApp(org.qosp.notes.App)&#10;  The following other entry points also depend on it:&#10;      org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]&#10;      dagger.hilt.android.internal.lifecycle.HiltViewModelFactory.ViewModelFactoriesEntryPoint.getHiltViewModelMap() [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ViewModelC]&#10;      org.qosp.notes.ui.MainActivity_GeneratedInjector.injectMainActivity(org.qosp.notes.ui.MainActivity) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC]&#10;      org.qosp.notes.ui.about.AboutFragment_GeneratedInjector.injectAboutFragment(org.qosp.notes.ui.about.AboutFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.archive.ArchiveFragment_GeneratedInjector.injectArchiveFragment(org.qosp.notes.ui.archive.ArchiveFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.common.AbstractNotesFragment_GeneratedInjector.injectAbstractNotesFragment(org.qosp.notes.ui.common.AbstractNotesFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.editor.EditorFragment_GeneratedInjector.injectEditorFragment(org.qosp.notes.ui.editor.EditorFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.main.MainFragment_GeneratedInjector.injectMainFragment(org.qosp.notes.ui.main.MainFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.recorder.RecordAudioDialog_GeneratedInjector.injectRecordAudioDialog(org.qosp.notes.ui.recorder.RecordAudioDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog_GeneratedInjector.injectNextcloudAccountDialog(org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      and 1 other" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/MissingBinding] org.qosp.notes.data.sync.webdav.WebdavConfig cannot be provided without an @Inject constructor or an @Provides-annotated method.&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.sync.webdav.WebdavConfig is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavAPI(config)&#10;      org.qosp.notes.data.sync.webdav.WebdavAPI is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavManager(webdavAPI, )&#10;      org.qosp.notes.data.sync.webdav.WebdavManager is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncProvider(, webdavManager)&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.components.workers.SyncWorker(, syncManager)&#10;      org.qosp.notes.components.workers.SyncWorker_AssistedFactory is injected at&#10;          org.qosp.notes.components.workers.SyncWorker_HiltModule.bind(factory)&#10;      java.util.Map&lt;java.lang.String,javax.inject.Provider&lt;androidx.hilt.work.WorkerAssistedFactory&lt;? extends androidx.work.ListenableWorker&gt;&gt;&gt; is injected at&#10;          androidx.hilt.work.WorkerFactoryModule.provideFactory(workerFactories)&#10;      androidx.hilt.work.HiltWorkerFactory is injected at&#10;          org.qosp.notes.App.workerFactory&#10;      org.qosp.notes.App is injected at&#10;          org.qosp.notes.App_GeneratedInjector.injectApp(org.qosp.notes.App)&#10;  The following other entry points also depend on it:&#10;      org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]&#10;      dagger.hilt.android.internal.lifecycle.HiltViewModelFactory.ViewModelFactoriesEntryPoint.getHiltViewModelMap() [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ViewModelC]&#10;      org.qosp.notes.ui.MainActivity_GeneratedInjector.injectMainActivity(org.qosp.notes.ui.MainActivity) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC]&#10;      org.qosp.notes.ui.about.AboutFragment_GeneratedInjector.injectAboutFragment(org.qosp.notes.ui.about.AboutFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.archive.ArchiveFragment_GeneratedInjector.injectArchiveFragment(org.qosp.notes.ui.archive.ArchiveFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.common.AbstractNotesFragment_GeneratedInjector.injectAbstractNotesFragment(org.qosp.notes.ui.common.AbstractNotesFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.editor.EditorFragment_GeneratedInjector.injectEditorFragment(org.qosp.notes.ui.editor.EditorFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.main.MainFragment_GeneratedInjector.injectMainFragment(org.qosp.notes.ui.main.MainFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.recorder.RecordAudioDialog_GeneratedInjector.injectRecordAudioDialog(org.qosp.notes.ui.recorder.RecordAudioDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog_GeneratedInjector.injectNextcloudAccountDialog(org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      and 1 other" />
              <option value="Type mismatch.&#10;Required:&#10;String&#10;Found:&#10;Flow&lt;String&gt;" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\tmp\kapt3\stubs\defaultFlavorDebug\org\qosp\notes\di\WebdavModule.java:39: : @Provides methods must return a value (not void)&#10;    public final void provideWebdavConfig(@org.jetbrains.annotations.NotNull&#10;                      ^" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showInlineAcceptTips" value="false" />
    <option name="showInlineCancelTips" value="false" />
    <option name="showInlineTriggerTips" value="false" />
  </component>
</application>