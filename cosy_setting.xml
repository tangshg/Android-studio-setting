<application>
  <component name="CosySettings">
    <option name="dedicatedDomainUrl" value="" />
    <option name="localStoragePath" value="C:\Users\laohuashi\.lingma" />
    <option name="manualOpenLocalModel" value="true" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="true" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="true" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="quillpad|">
          <value>
            <list>
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="quillpad|1032412478227560">
          <value>
            <list>
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="enum class CloudService(override val nameResource: Int) : HasNameResource, EnumPreference by key(&quot;cloud_service&quot;) {&#10;    DISABLED(R.string.preferences_cloud_service_disabled) { override val isDefault = true },&#10;    NEXTCLOUD(R.string.preferences_cloud_service_nextcloud),&#10;    WEBDAV(R.string.preferences_cloud_service_webdavcloud),&#10;}" />
              <option value="生成文档注释" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/generate comment" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="Note.asNextcloudNote" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="我使用 sardine-android 的依赖，想要达成上述代码的作用，用来访问WEBDAV，帮我生成例子" />
              <option value="我需要是和 nextcloud.kt 完全一致的写法" />
              <option value="我只需要接口，不要实现" />
              <option value="/generate comment" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="quillpad|1738711289590196">
          <value>
            <list>
              <option value="D:\Android\AndroidProject\quillpad\app\build\generated\hilt\component_sources\defaultFlavorDebug\org\qosp\notes\App_HiltComponents.java:193: : [Dagger/MissingBinding] org.qosp.notes.data.sync.webdav.WebdavConfig cannot be provided without an @Inject constructor or an @Provides-annotated method.&#10;  public abstract static class SingletonC implements FragmentGetContextFix.FragmentGetContextFixEntryPoint,&#10;                         ^&#10;      org.qosp.notes.data.sync.webdav.WebdavConfig is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavAPI(config)&#10;      org.qosp.notes.data.sync.webdav.WebdavAPI is injected at&#10;          org.qosp.notes.di.WebdavModule.provideWebdavManager(webdavAPI, )&#10;      org.qosp.notes.data.sync.webdav.WebdavManager is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncProvider(, webdavManager)&#10;      org.qosp.notes.data.sync.core.SyncProvider is injected at&#10;          org.qosp.notes.di.UtilModule.provideSyncManager(, syncProvider, )&#10;      org.qosp.notes.data.sync.core.SyncManager is injected at&#10;          org.qosp.notes.components.workers.SyncWorker(, syncManager)&#10;      org.qosp.notes.components.workers.SyncWorker_AssistedFactory is injected at&#10;          org.qosp.notes.components.workers.SyncWorker_HiltModule.bind(factory)&#10;      java.util.Map&lt;java.lang.String,javax.inject.Provider&lt;androidx.hilt.work.WorkerAssistedFactory&lt;? extends androidx.work.ListenableWorker&gt;&gt;&gt; is injected at&#10;          androidx.hilt.work.WorkerFactoryModule.provideFactory(workerFactories)&#10;      androidx.hilt.work.HiltWorkerFactory is injected at&#10;          org.qosp.notes.App.workerFactory&#10;      org.qosp.notes.App is injected at&#10;          org.qosp.notes.App_GeneratedInjector.injectApp(org.qosp.notes.App)&#10;  The following other entry points also depend on it:&#10;      org.qosp.notes.components.backup.BackupService_GeneratedInjector.injectBackupService(org.qosp.notes.components.backup.BackupService) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ServiceC]&#10;      dagger.hilt.android.internal.lifecycle.HiltViewModelFactory.ViewModelFactoriesEntryPoint.getHiltViewModelMap() [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ViewModelC]&#10;      org.qosp.notes.ui.MainActivity_GeneratedInjector.injectMainActivity(org.qosp.notes.ui.MainActivity) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC]&#10;      org.qosp.notes.ui.about.AboutFragment_GeneratedInjector.injectAboutFragment(org.qosp.notes.ui.about.AboutFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.archive.ArchiveFragment_GeneratedInjector.injectArchiveFragment(org.qosp.notes.ui.archive.ArchiveFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.common.AbstractNotesFragment_GeneratedInjector.injectAbstractNotesFragment(org.qosp.notes.ui.common.AbstractNotesFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.editor.EditorFragment_GeneratedInjector.injectEditorFragment(org.qosp.notes.ui.editor.EditorFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.main.MainFragment_GeneratedInjector.injectMainFragment(org.qosp.notes.ui.main.MainFragment) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.recorder.RecordAudioDialog_GeneratedInjector.injectRecordAudioDialog(org.qosp.notes.ui.recorder.RecordAudioDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog_GeneratedInjector.injectNextcloudAccountDialog(org.qosp.notes.ui.sync.nextcloud.NextcloudAccountDialog) [org.qosp.notes.App_HiltComponents.SingletonC  org.qosp.notes.App_HiltComponents.ActivityRetainedC  org.qosp.notes.App_HiltComponents.ActivityC  org.qosp.notes.App_HiltComponents.FragmentC]&#10;      and 1 other" />
              <option value="Type mismatch.&#10;Required:&#10;String&#10;Found:&#10;Flow&lt;String&gt;" />
              <option value="D:\Android\AndroidProject\quillpad\app\build\tmp\kapt3\stubs\defaultFlavorDebug\org\qosp\notes\di\WebdavModule.java:39: : @Provides methods must return a value (not void)&#10;    public final void provideWebdavConfig(@org.jetbrains.annotations.NotNull&#10;                      ^" />
              <option value="/explain code" />
              <option value="tryCalling" />
              <option value="/explain code" />
              <option value="FATAL EXCEPTION: DefaultDispatcher-worker-3&#10;                                                       Process: io.github.quillpad, PID: 13367&#10;                                                       kotlin.NotImplementedError: An operation is not implemented: 提供返回值&#10;                                                       &#9;at org.qosp.notes.data.sync.webdav.WebdavAPIImpl.getNotesAPI(WebdavAPIImpl.kt:43)&#10;                                                       &#9;at org.qosp.notes.data.sync.webdav.WebdavAPIKt.testCredentials(WebdavAPI.kt:57)&#10;                                                       &#9;at org.qosp.notes.data.sync.webdav.WebdavManager.authenticate(WebdavManager.kt:53)&#10;                                                       &#9;at org.qosp.notes.data.sync.core.SyncManager$actor$1.invokeSuspend(SyncManager.kt:161)&#10;                                                       &#9;at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)&#10;                                                       &#9;at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)&#10;                                                       &#9;at kotlinx.coroutines.internal.LimitedDispatcher.run(LimitedDispatcher.kt:42)&#10;                                                       &#9;at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:95)&#10;                                                       &#9;at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:570)&#10;                                                       &#9;at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)&#10;                                                       &#9;at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:677)&#10;                                                       &#9;at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:664)&#10;                                                       &#9;Suppressed: kotlinx.coroutines.DiagnosticCoroutineContextException: [ActorCoroutine{Cancelling}@4c3acca, Dispatchers.IO]" />
              <option value="/explain code" />
              <option value="执行REPORT请求" />
              <option value="我是用 sradine-Android，从webdav上下载一个txt文件，应该怎么做" />
              <option value="sardine.setCredentials" />
              <option value="/explain code" />
              <option value="函数体在哪里" />
              <option value="/explain code" />
              <option value="我使用的 sardine -Android ，如何提供authenticationHeaders" />
              <option value="我不需要 basic auth" />
              <option value="Class 'WebdavAPIImpl' is not abstract and does not implement abstract member public abstract suspend fun createNoteAPI(note: WebdavNote, url: String, sardine: Sardine): WebdavNote defined in org.qosp.notes.data.sync.webdav.WebdavAPI" />
              <option value="/explain code" />
              <option value="帮我完成这个函数" />
              <option value="@Serializable&#10;data class WebdavNote(&#10;    val id: Long,&#10;    val etag: String? = null,&#10;    val content: String,&#10;    val title: String,&#10;    val category: String,&#10;    val favorite: Boolean,&#10;    val modified: Long,&#10;    val readOnly: Boolean? = null,&#10;)" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showInlineAcceptTips" value="false" />
    <option name="showInlineCancelTips" value="false" />
    <option name="showInlineTriggerTips" value="false" />
    <option name="upgradeStrategy" value="forbid" />
  </component>
</application>